[{"path":"https://martinwestgate.com/synthesisr/dev/articles/overview.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Overview","text":"Systematic review searches include multiple databases export results variety formats overlap coverage databases. streamline process importing, assembling, deduplicating results, synthesisr recognizes bibliographic files exported databases commonly used systematic reviews merges results standardized format.","code":""},{"path":"https://martinwestgate.com/synthesisr/dev/articles/overview.html","id":"read-and-assemble-bibliographic-files","dir":"Articles","previous_headings":"","what":"Read and assemble bibliographic files","title":"Overview","text":"synthesisr can read BibTex RIS formatted bibliographic data files. detects whether files bib-like ris-like imports accordingly. Note files databases may contain non-standard fields non-standard characters cause import failure rare cases; happens, recommend converting file open source bibliographic management software Zotero. code , demonstrate read assemble bibliographic data files example datasets included synthesisr package. Note using code data, need use system.file() instead want pass character vector path(s) file(s) want import. example, saved search results directory called “search_results”, may want use list.files(\"./search_results/\") instead.","code":"# system.file will look for the path to where synthesisr is installed # by using the example bibliographic data files, you can reproduce the vignette bibfiles <- list.files(   system.file(\"extdata/\", package = \"synthesisr\"),   full.names = TRUE )  # we can print the list of bibfiles to confirm what we will import # in this example, we have bibliographic data exported from Scopus and Zoological Record print(bibfiles)  # now we can use read_refs to read in our bibliographic data files # we save them to a data.frame object (because return_df=TRUE) called imported_files library(synthesisr) imported_files <- read_refs(   filename = bibfiles,   return_df = TRUE)"},{"path":"https://martinwestgate.com/synthesisr/dev/articles/overview.html","id":"deduplicate-bibliographic-data","dir":"Articles","previous_headings":"","what":"Deduplicate bibliographic data","title":"Overview","text":"Many journals indexed multiple databases, searching across databases retrieve duplicates. import, synthesisr can detect duplicates retain unique bibliographic records using variety methods string distance fuzzy matching records. good place start removing articles identical titles, especially since reduces computational time sophisticated deduplication methods. cases, may useful know articles identified duplicates can manually reviewed information two records can merged. Using partially-deduplicated dataset, check titles use string distance methods find additional duplicate articles code remove extracting unique references. Although use one secondary deduplication method (string distance), look additional duplicates based fuzzy matching abstracts, example.","code":"## first, we will remove articles that have identical titles ## this is a fairly conservative approach, so we will remove them without review # df <- deduplicate( #   imported_files, #   match_by = \"title\", #   method = \"exact\" # )"},{"path":"https://martinwestgate.com/synthesisr/dev/articles/overview.html","id":"note-the-examples-below-dont-match-now-need-updating","dir":"Articles","previous_headings":"","what":"NOTE: the examples below don’t match now; need updating","title":"Overview","text":"","code":"# there are still some duplicate articles that were not removed # for example, the titles for articles 91 and 114 appear identical ## df$title[c(91,114)] # the dash-like symbol in title 91, however, is a special character not punctuation # so it was not classified as identical  # similarly, there is a missing space in the title for article 96 ## df$title[c(21,96)]  # and an extra space in title 47 ## df$title[c(47, 101)]  # # in this example, we will use string distance to identify likely duplicates # duplicates_string <- find_duplicates( #   df$title, #   method = \"string_osa\", #   to_lower = TRUE, #   rm_punctuation = TRUE, #   threshold = 7 # )  # we can extract the line numbers from the dataset that are likely duplicated # this lets us manually review those titles to confirm they are duplicates  # manual_checks <- review_duplicates(df$title, duplicates_string) # # the titles under match #99 are not duplicates, so we need to keep them both # # we can use the override_duplicates function to manually mark them as unique # new_duplicates <- synthesisr::override_duplicates(duplicates_string, 99) #  # # now we can extract unique references from our dataset # # we need to pass it the dataset (df) and the matching articles (new_duplicates) # results <- extract_unique_references(df, new_duplicates)"},{"path":"https://martinwestgate.com/synthesisr/dev/articles/overview.html","id":"write-bibliographic-files","dir":"Articles","previous_headings":"","what":"Write bibliographic files","title":"Overview","text":"facilitate exporting results platforms assembly deduplication, synthesisr can write bibliographic data .ris .bib files. Optionally, write_refs() can write directly text file stored locally.","code":"# # synthesisr can write the full dataset to a bibliographic file # # but in this example, we will just write the first citation # # we also want it to be a nice clean bibliographic file, so we remove NA data # # this makes it easier to view the output when working with a single article # citation <- df[1, !is.na(df[1,])] #  # format_citation(citation) #  # write_refs(citation, #   format = \"bib\", #   file = FALSE # )"},{"path":"https://martinwestgate.com/synthesisr/dev/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Martin Westgate. Author, maintainer. Eliza Grames. Author.","code":""},{"path":"https://martinwestgate.com/synthesisr/dev/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Westgate M, Grames E (2025). synthesisr: Import, Assemble, Deduplicate Bibliographic Datasets. R package version 0.3.0.9999, https://martinwestgate.com/synthesisr/.","code":"@Manual{,   title = {synthesisr: Import, Assemble, and Deduplicate Bibliographic Datasets},   author = {Martin Westgate and Eliza Grames},   year = {2025},   note = {R package version 0.3.0.9999},   url = {https://martinwestgate.com/synthesisr/}, }"},{"path":"https://martinwestgate.com/synthesisr/dev/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Import, Assemble, and Deduplicate Bibliographic Datasets","text":"synthesisr available CRAN: Alternatively can install GitHub:","code":"install.packages(\"synthesisr\") remotes::install_github(\"mjwestgate/synthesisr\")"},{"path":"https://martinwestgate.com/synthesisr/dev/index.html","id":"basic-usage","dir":"","previous_headings":"","what":"Basic usage","title":"Import, Assemble, and Deduplicate Bibliographic Datasets","text":"default function importing bibliographic data read_refs():","code":"x <- read_refs(\"a_file.bib\")"},{"path":"https://martinwestgate.com/synthesisr/dev/reference/add_line_breaks.html","id":null,"dir":"Reference","previous_headings":"","what":"Add line breaks to one or more strings — add_line_breaks","title":"Add line breaks to one or more strings — add_line_breaks","text":"function takes vector strings adds line breaks every n characters. Primarily built called internally format_citation(), function made available can useful contexts.","code":""},{"path":"https://martinwestgate.com/synthesisr/dev/reference/add_line_breaks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add line breaks to one or more strings — add_line_breaks","text":"","code":"add_line_breaks(x, n = 50, max_n = NULL, html = FALSE, max_time = NULL)"},{"path":"https://martinwestgate.com/synthesisr/dev/reference/add_line_breaks.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add line breaks to one or more strings — add_line_breaks","text":"x Either string vector; vector class character coerced one using .character(). n Numeric: desired number characters separate consecutive line breaks. max_n DEPRECATED: provided currently overwrite n; otherwise synonymous n removed future versions. html Logical: line breaks specified html? max_time DEPRECATED: Previously maximum amount time (seconds) allowed adjust groups character thresholds reached. Ignored.","code":""},{"path":"https://martinwestgate.com/synthesisr/dev/reference/add_line_breaks.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add line breaks to one or more strings — add_line_breaks","text":"Returns input vector unaltered except addition line breaks.","code":""},{"path":"https://martinwestgate.com/synthesisr/dev/reference/add_line_breaks.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Add line breaks to one or more strings — add_line_breaks","text":"Line breaks added words, value n actually threshold value rather matched exactly.","code":""},{"path":"https://martinwestgate.com/synthesisr/dev/reference/add_line_breaks.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add line breaks to one or more strings — add_line_breaks","text":"","code":"add_line_breaks(c(\"On the Origin of Species\"), n = 10) #> [1] \"On the\\nOrigin\\nof\\nSpecies\""},{"path":"https://martinwestgate.com/synthesisr/dev/reference/bibliography-class.html","id":null,"dir":"Reference","previous_headings":"","what":"bibliography-class — bibliography-class","title":"bibliography-class — bibliography-class","text":"small number standard methods interacting class 'bibliography'. may added later.","code":""},{"path":"https://martinwestgate.com/synthesisr/dev/reference/bibliography-class.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"bibliography-class — bibliography-class","text":"","code":"# S3 method for class 'bibliography' summary(object, ...)  # S3 method for class 'bibliography' print(x, n, ...)  # S3 method for class 'bibliography' x[n]  # S3 method for class 'bibliography' c(...)  # S3 method for class 'bibliography' as.data.frame(x, ...)  as.bibliography(x, ...)  # S3 method for class 'bibliography' as_tibble(x, ..., .rows, .name_repair, rownames)"},{"path":"https://martinwestgate.com/synthesisr/dev/reference/bibliography-class.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"bibliography-class — bibliography-class","text":"object object class 'bibliography' ... information x object class 'bibliography' n Number items select/print .rows currently ignored .name_repair currently ignored rownames currently ignored","code":""},{"path":"https://martinwestgate.com/synthesisr/dev/reference/bibliography-class.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"bibliography-class — bibliography-class","text":"Methods class bibliography","code":""},{"path":"https://martinwestgate.com/synthesisr/dev/reference/clean_.html","id":null,"dir":"Reference","previous_headings":"","what":"Clean a tibble or vector — clean_","title":"Clean a tibble or vector — clean_","text":"Cleans column author names","code":""},{"path":"https://martinwestgate.com/synthesisr/dev/reference/clean_.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clean a tibble or vector — clean_","text":"","code":"clean_df(data)  clean_authors(x)  clean_colnames(x)"},{"path":"https://martinwestgate.com/synthesisr/dev/reference/clean_.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Clean a tibble or vector — clean_","text":"data tibble bibliographic information. x vector strings","code":""},{"path":"https://martinwestgate.com/synthesisr/dev/reference/clean_.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Clean a tibble or vector — clean_","text":"Returns input, cleaner.","code":""},{"path":"https://martinwestgate.com/synthesisr/dev/reference/clean_.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Clean a tibble or vector — clean_","text":"","code":"df <-  data.frame(   X..title. = c(     \"EviAtlas: a tool for visualising evidence synthesis databases\",     \"revtools: An R package to support article screening for evidence synthesis\",     \"An automated approach to identifying search terms for systematic reviews\",     \"Reproducible, flexible and high-throughput data extraction from primary literature\"),   YEAR = c(\"2019\", \"2019\", \"2019\", \"2019\"),   authors = c(     \"Haddaway et al\",     \"Westgate\",     \"EM Grames AND AN Stillman  & MW Tingley and CS Elphick\",     \"Pick et al\") )  clean_df(df) #>                                                                                title #> 1                      EviAtlas: a tool for visualising evidence synthesis databases #> 2         revtools: An R package to support article screening for evidence synthesis #> 3           An automated approach to identifying search terms for systematic reviews #> 4 Reproducible, flexible and high-throughput data extraction from primary literature #>   year                                                  author #> 1 2019                                          Haddaway et al #> 2 2019                                                Westgate #> 3 2019 EM Grames and AN Stillman and MW Tingley and CS Elphick #> 4 2019                                              Pick et al  # or use sub-functions colnames(df) <- clean_colnames(df) # colnames(df) <- clean_colnames(colnames(df)) # also works df$author <- clean_authors(df$author)"},{"path":"https://martinwestgate.com/synthesisr/dev/reference/code_lookup.html","id":null,"dir":"Reference","previous_headings":"","what":"Bibliographic code lookup for search results assembly — code_lookup","title":"Bibliographic code lookup for search results assembly — code_lookup","text":"data frame can used look common codes different bibliographic fields across databases merge common format.","code":""},{"path":"https://martinwestgate.com/synthesisr/dev/reference/code_lookup.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bibliographic code lookup for search results assembly — code_lookup","text":"","code":"code_lookup"},{"path":"https://martinwestgate.com/synthesisr/dev/reference/code_lookup.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Bibliographic code lookup for search results assembly — code_lookup","text":"data.frame 226 obs 12 variables code code used search results order order rank fields assembled results category_description type bibliographic data entry_description description field field bibliographic field codes correspond ris_generic logical: code used generic ris files ris_wos logical: code used Web Science ris files ris_pubmed logical: code used PubMed ris files ris_scopus logical: code used Scopus ris files ris_asp logical: code used Academic Search Premier ris files ris_ovid logical: code used Ovid ris files ris_synthesisr logical: code used synthesisr imports & exports","code":""},{"path":"https://martinwestgate.com/synthesisr/dev/reference/deduplicate.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove duplicates from a bibliographic data set — deduplicate","title":"Remove duplicates from a bibliographic data set — deduplicate","text":"Removes duplicates using sensible defaults","code":""},{"path":"https://martinwestgate.com/synthesisr/dev/reference/deduplicate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove duplicates from a bibliographic data set — deduplicate","text":"","code":"deduplicate(data, match_by, method, type = \"merge\", ...)"},{"path":"https://martinwestgate.com/synthesisr/dev/reference/deduplicate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove duplicates from a bibliographic data set — deduplicate","text":"data data.frame containing bibliographic information. match_by Name column data duplicates sought. method duplicate detection function use; see link{string_} link{fuzz_} examples. Passed find_duplicates(). type entries selected? Default \"merge\" selects entries largest number characters column. Alternatively \"select\" returns row highest total number characters. ... Arguments passed find_duplicates().","code":""},{"path":"https://martinwestgate.com/synthesisr/dev/reference/deduplicate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove duplicates from a bibliographic data set — deduplicate","text":"data.frame containing data identified unique.","code":""},{"path":"https://martinwestgate.com/synthesisr/dev/reference/deduplicate.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Remove duplicates from a bibliographic data set — deduplicate","text":"wrapper function find_duplicates() extract_unique_references(), tries choose sensible defaults. Use care.","code":""},{"path":[]},{"path":"https://martinwestgate.com/synthesisr/dev/reference/deduplicate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Remove duplicates from a bibliographic data set — deduplicate","text":"","code":"my_df <-  data.frame(   title = c(     \"EviAtlas: a tool for visualising evidence synthesis databases\",     \"revtools: An R package to support article screening for evidence synthesis\",     \"An automated approach to identifying search terms for systematic reviews\",     \"Reproducible, flexible and high-throughput data extraction from primary literature\",     \"eviatlas:tool for visualizing evidence synthesis databases.\",     \"REVTOOLS a package to support article-screening for evidence synthsis\"   ),   year = c(\"2019\", \"2019\", \"2019\", \"2019\", NA, NA),   authors = c(\"Haddaway et al\", \"Westgate\",               \"Grames et al\", \"Pick et al\", NA, NA),   stringsAsFactors = FALSE )  # run deduplication dups <- find_duplicates(   my_df$title,   method = \"string_osa\",   rm_punctuation = TRUE,   to_lower = TRUE )  extract_unique_references(my_df, matches = dups) #>                                                                                title #> 1                      EviAtlas: a tool for visualising evidence synthesis databases #> 2         revtools: An R package to support article screening for evidence synthesis #> 3           An automated approach to identifying search terms for systematic reviews #> 4 Reproducible, flexible and high-throughput data extraction from primary literature #>   year        authors n_duplicates #> 1 2019 Haddaway et al            2 #> 2 2019       Westgate            2 #> 3 2019   Grames et al            1 #> 4 2019     Pick et al            1  # or, in one line: deduplicate(my_df, \"title\",   method = \"string_osa\",   rm_punctuation = TRUE,   to_lower = TRUE) #>                                                                                title #> 1                      EviAtlas: a tool for visualising evidence synthesis databases #> 2         revtools: An R package to support article screening for evidence synthesis #> 3           An automated approach to identifying search terms for systematic reviews #> 4 Reproducible, flexible and high-throughput data extraction from primary literature #>   year        authors n_duplicates #> 1 2019 Haddaway et al            2 #> 2 2019       Westgate            2 #> 3 2019   Grames et al            1 #> 4 2019     Pick et al            1"},{"path":"https://martinwestgate.com/synthesisr/dev/reference/detect_.html","id":null,"dir":"Reference","previous_headings":"","what":"Detect file formatting information — detect_","title":"Detect file formatting information — detect_","text":"Bibliographic data can stored number different file types, meaning detecting consistent attributes files necessary parsed accurately. functions attempt identify key file attributes. Specifically, detect_parser() determines parse_ function use; detect_delimiter() detect_lookup() identify different attributes RIS files; detect_year() attempts fill gaps publication years information stored tibble.","code":""},{"path":"https://martinwestgate.com/synthesisr/dev/reference/detect_.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Detect file formatting information — detect_","text":"","code":"detect_parser(x)  detect_delimiter(x)  detect_lookup(tags)  detect_year(df)"},{"path":"https://martinwestgate.com/synthesisr/dev/reference/detect_.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Detect file formatting information — detect_","text":"x character vector containing bibliographic data tags character vector containing RIS tags. df data.frame containing bibliographic data","code":""},{"path":"https://martinwestgate.com/synthesisr/dev/reference/detect_.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Detect file formatting information — detect_","text":"detect_parser() detect_delimiter() return length-1 character; detect_year() returns character vector listing estimated publication years; detect_lookup() returns data.frame.","code":""},{"path":"https://martinwestgate.com/synthesisr/dev/reference/detect_.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Detect file formatting information — detect_","text":"","code":"revtools <- c(   \"\",   \"PMID- 31355546\",   \"VI  - 10\",   \"IP  - 4\",   \"DP  - 2019 Dec\",   \"TI  - revtools: An R package to support article          screening for evidence synthesis.\",   \"PG  - 606-614\",   \"LID - 10.1002/jrsm.1374 [doi]\",   \"AU  - Westgate MJ\",   \"LA  - eng\",   \"PT  - Journal Article\",   \"JT  - Research Synthesis Methods\",   \"\" )  # detect basic attributes of ris files detect_parser(revtools) #> [1] \"parse_pubmed\" detect_delimiter(revtools) #> [1] \"space\"  # determine which tag format to use tags <- trimws(unlist(lapply(   strsplit(revtools, \"- \"),   function(a){a[1]} ))) pubmed_tag_list <- detect_lookup(tags[!is.na(tags)])  # find year data in other columns df <- as.data.frame(parse_pubmed(revtools)) df$year <- detect_year(df)"},{"path":"https://martinwestgate.com/synthesisr/dev/reference/extract_unique_references.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove duplicates from a bibliographic data set — extract_unique_references","title":"Remove duplicates from a bibliographic data set — extract_unique_references","text":"Given list duplicate entries data set, function extracts unique references.","code":""},{"path":"https://martinwestgate.com/synthesisr/dev/reference/extract_unique_references.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove duplicates from a bibliographic data set — extract_unique_references","text":"","code":"extract_unique_references(data, matches, type = \"merge\")"},{"path":"https://martinwestgate.com/synthesisr/dev/reference/extract_unique_references.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove duplicates from a bibliographic data set — extract_unique_references","text":"data data.frame containing bibliographic information. matches vector showing entries data duplicates. type entries selected retain? Default \"merge\", selects entries largest number characters column. Alternatively, \"select\" returns row highest total number characters.","code":""},{"path":"https://martinwestgate.com/synthesisr/dev/reference/extract_unique_references.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove duplicates from a bibliographic data set — extract_unique_references","text":"Returns data.frame unique references.","code":""},{"path":[]},{"path":"https://martinwestgate.com/synthesisr/dev/reference/extract_unique_references.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Remove duplicates from a bibliographic data set — extract_unique_references","text":"","code":"my_df <-  data.frame(   title = c(     \"EviAtlas: a tool for visualising evidence synthesis databases\",     \"revtools: An R package to support article screening for evidence synthesis\",     \"An automated approach to identifying search terms for systematic reviews\",     \"Reproducible, flexible and high-throughput data extraction from primary literature\",     \"eviatlas:tool for visualizing evidence synthesis databases.\",     \"REVTOOLS a package to support article-screening for evidence synthsis\"   ),   year = c(\"2019\", \"2019\", \"2019\", \"2019\", NA, NA),   authors = c(\"Haddaway et al\", \"Westgate\",               \"Grames et al\", \"Pick et al\", NA, NA),   stringsAsFactors = FALSE )  # run deduplication dups <- find_duplicates(   my_df$title,   method = \"string_osa\",   rm_punctuation = TRUE,   to_lower = TRUE )  extract_unique_references(my_df, matches = dups) #>                                                                                title #> 1                      EviAtlas: a tool for visualising evidence synthesis databases #> 2         revtools: An R package to support article screening for evidence synthesis #> 3           An automated approach to identifying search terms for systematic reviews #> 4 Reproducible, flexible and high-throughput data extraction from primary literature #>   year        authors n_duplicates #> 1 2019 Haddaway et al            2 #> 2 2019       Westgate            2 #> 3 2019   Grames et al            1 #> 4 2019     Pick et al            1  # or, in one line: deduplicate(my_df, \"title\",   method = \"string_osa\",   rm_punctuation = TRUE,   to_lower = TRUE) #>                                                                                title #> 1                      EviAtlas: a tool for visualising evidence synthesis databases #> 2         revtools: An R package to support article screening for evidence synthesis #> 3           An automated approach to identifying search terms for systematic reviews #> 4 Reproducible, flexible and high-throughput data extraction from primary literature #>   year        authors n_duplicates #> 1 2019 Haddaway et al            2 #> 2 2019       Westgate            2 #> 3 2019   Grames et al            1 #> 4 2019     Pick et al            1"},{"path":"https://martinwestgate.com/synthesisr/dev/reference/find_duplicates.html","id":null,"dir":"Reference","previous_headings":"","what":"Detect duplicate values — find_duplicates","title":"Detect duplicate values — find_duplicates","text":"Identifies duplicate bibliographic entries using different duplicate detection methods.","code":""},{"path":"https://martinwestgate.com/synthesisr/dev/reference/find_duplicates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Detect duplicate values — find_duplicates","text":"","code":"find_duplicates(   data,   method = \"exact\",   group_by,   threshold,   to_lower = FALSE,   rm_punctuation = FALSE )"},{"path":"https://martinwestgate.com/synthesisr/dev/reference/find_duplicates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Detect duplicate values — find_duplicates","text":"data character vector containing duplicate bibliographic entries. method string indicating matching calculated. Either \"exact\" exact matching (default), name function calculating string distance. group_by optional vector, data.frame list containing data use 'grouping' variables; , categories within duplicates sought. Defaults NULL, case entries compared others. Ignored method = \"exact\". threshold Numeric: cutoff threshold deciding two strings duplicates. Sensible values depend method chosen. Defaults 5 method = \"string_osa\" must specified instances except method = \"exact\" (threshold required). to_lower Logical: entries converted lower case calculating string distance? Defaults FALSE. rm_punctuation Logical: punctuation removed calculating string distance? Defaults FALSE.","code":""},{"path":"https://martinwestgate.com/synthesisr/dev/reference/find_duplicates.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Detect duplicate values — find_duplicates","text":"Returns vector duplicate matches, attributes listing methods used.","code":""},{"path":[]},{"path":"https://martinwestgate.com/synthesisr/dev/reference/find_duplicates.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Detect duplicate values — find_duplicates","text":"","code":"my_df <-  data.frame(   title = c(     \"EviAtlas: a tool for visualising evidence synthesis databases\",     \"revtools: An R package to support article screening for evidence synthesis\",     \"An automated approach to identifying search terms for systematic reviews\",     \"Reproducible, flexible and high-throughput data extraction from primary literature\",     \"eviatlas:tool for visualizing evidence synthesis databases.\",     \"REVTOOLS a package to support article-screening for evidence synthsis\"   ),   year = c(\"2019\", \"2019\", \"2019\", \"2019\", NA, NA),   authors = c(\"Haddaway et al\", \"Westgate\",               \"Grames et al\", \"Pick et al\", NA, NA),   stringsAsFactors = FALSE )  # run deduplication dups <- find_duplicates(   my_df$title,   method = \"string_osa\",   rm_punctuation = TRUE,   to_lower = TRUE )  extract_unique_references(my_df, matches = dups) #>                                                                                title #> 1                      EviAtlas: a tool for visualising evidence synthesis databases #> 2         revtools: An R package to support article screening for evidence synthesis #> 3           An automated approach to identifying search terms for systematic reviews #> 4 Reproducible, flexible and high-throughput data extraction from primary literature #>   year        authors n_duplicates #> 1 2019 Haddaway et al            2 #> 2 2019       Westgate            2 #> 3 2019   Grames et al            1 #> 4 2019     Pick et al            1  # or, in one line: deduplicate(my_df, \"title\",   method = \"string_osa\",   rm_punctuation = TRUE,   to_lower = TRUE) #>                                                                                title #> 1                      EviAtlas: a tool for visualising evidence synthesis databases #> 2         revtools: An R package to support article screening for evidence synthesis #> 3           An automated approach to identifying search terms for systematic reviews #> 4 Reproducible, flexible and high-throughput data extraction from primary literature #>   year        authors n_duplicates #> 1 2019 Haddaway et al            2 #> 2 2019       Westgate            2 #> 3 2019   Grames et al            1 #> 4 2019     Pick et al            1"},{"path":"https://martinwestgate.com/synthesisr/dev/reference/format_citation.html","id":null,"dir":"Reference","previous_headings":"","what":"Format a citation — format_citation","title":"Format a citation — format_citation","text":"function takes object class data.frame, list, bibliography returns formatted citation.","code":""},{"path":"https://martinwestgate.com/synthesisr/dev/reference/format_citation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format a citation — format_citation","text":"","code":"format_citation(   data,   details = TRUE,   abstract = FALSE,   add_html = FALSE,   line_breaks = FALSE,   ... )"},{"path":"https://martinwestgate.com/synthesisr/dev/reference/format_citation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format a citation — format_citation","text":"data object class data.frame, list, bibliography. details Logical: identifying information author names & journal titles displayed? Defaults TRUE. abstract Logical: abstract shown (available)? Defaults FALSE. add_html Logical: journal title italicized using html codes? Defaults FALSE. line_breaks Either logical, stating whether line breaks added, numeric stating many characters separate consecutive line breaks. Defaults FALSE. ... arguments.","code":""},{"path":"https://martinwestgate.com/synthesisr/dev/reference/format_citation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Format a citation — format_citation","text":"Returns string length equal length(data) contains formatted citations.","code":""},{"path":"https://martinwestgate.com/synthesisr/dev/reference/format_citation.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Format a citation — format_citation","text":"","code":"roses <- c(\"@article{haddaway2018,   title={ROSES RepOrting standards for Systematic Evidence Syntheses:   pro forma, flow-diagram and descriptive summary of the plan and   conduct of environmental systematic reviews and systematic maps},   author={Haddaway, Neal R and Macura, Biljana and Whaley, Paul and Pullin, Andrew S},   journal={Environmental Evidence},   volume={7},   number={1},   pages={7},   year={2018},   publisher={Springer} }\")  tmp <- tempfile() writeLines(roses, tmp)  citation <- read_ref(tmp) #> Error in read_ref(tmp): could not find function \"read_ref\" format_citation(citation) #> Error in format_citation(citation): format_citation expects input data to be an object of class data.frame, bibliography, or list"},{"path":"https://martinwestgate.com/synthesisr/dev/reference/fuzz_.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate similarity between two strings — fuzz_","title":"Calculate similarity between two strings — fuzz_","text":"functions duplicate approach 'fuzzywuzzy' Python library calculating string similarity.","code":""},{"path":"https://martinwestgate.com/synthesisr/dev/reference/fuzz_.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate similarity between two strings — fuzz_","text":"","code":"fuzzdist(   a,   b,   method = c(\"fuzz_m_ratio\", \"fuzz_partial_ratio\", \"fuzz_token_sort_ratio\",     \"fuzz_token_set_ratio\") )  fuzz_m_ratio(a, b)  fuzz_partial_ratio(a, b)  fuzz_token_sort_ratio(a, b)  fuzz_token_set_ratio(a, b)"},{"path":"https://martinwestgate.com/synthesisr/dev/reference/fuzz_.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate similarity between two strings — fuzz_","text":"character vector items match b. b character vector items match . method method use fuzzy matching.","code":""},{"path":"https://martinwestgate.com/synthesisr/dev/reference/fuzz_.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate similarity between two strings — fuzz_","text":"Returns score length b, giving proportional dissimilarity b.","code":""},{"path":"https://martinwestgate.com/synthesisr/dev/reference/fuzz_.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Calculate similarity between two strings — fuzz_","text":"fuzz_m_ratio() measure number letters match two strings. calculated one minus two times number matched characters, divided number characters strings. fuzz_partial_ratio() calculates extent one string subset . one string perfect subset, zero. fuzz_token_sort_ratio() sorts words strings alphabetical order, checks similarity using fuzz_m_ratio(). fuzz_token_set_ratio() similar fuzz_token_sort_ratio(), compares sorted strings , third group made words common strings. returns maximum value fuzz_m_ratio() comparisons. fuzzdist() wrapper function, compatability stringdist.","code":""},{"path":"https://martinwestgate.com/synthesisr/dev/reference/fuzz_.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate similarity between two strings — fuzz_","text":"","code":"fuzzdist(\"On the Origin of Species\",          \"Of the Original Specs\",          method = \"fuzz_m_ratio\") #> [1] 0.4666667"},{"path":"https://martinwestgate.com/synthesisr/dev/reference/merge_columns.html","id":null,"dir":"Reference","previous_headings":"","what":"Bind two or more data frames with different columns — merge_columns","title":"Bind two or more data frames with different columns — merge_columns","text":"Takes two data.frames different column names different column orders binds single data.frame. function maintained backwards compatibility, synonymous dplyr::bind_rows() depracated future.","code":""},{"path":"https://martinwestgate.com/synthesisr/dev/reference/merge_columns.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bind two or more data frames with different columns — merge_columns","text":"","code":"merge_columns(x, y)"},{"path":"https://martinwestgate.com/synthesisr/dev/reference/merge_columns.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bind two or more data frames with different columns — merge_columns","text":"x Either data.frame list data.frames. y data.frame, optional x list.","code":""},{"path":"https://martinwestgate.com/synthesisr/dev/reference/merge_columns.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Bind two or more data frames with different columns — merge_columns","text":"Returns single data.frame input data frames merged.","code":""},{"path":"https://martinwestgate.com/synthesisr/dev/reference/merge_columns.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Bind two or more data frames with different columns — merge_columns","text":"","code":"df_1 <-  data.frame(   title = c(     \"EviAtlas: a tool for visualising evidence synthesis databases\",     \"revtools: An R package to support article screening for evidence synthesis\"   ),   year = c(\"2019\", \"2019\") )  df_2 <-  data.frame(   title = c(     \"An automated approach to identifying search terms for systematic reviews\",     \"Reproducible, flexible and high-throughput data extraction from primary literature\"   ),   authors = c(\"Grames et al\", \"Pick et al\") )  merge_columns(df_1, df_2) #>                                                                                title #> 1                      EviAtlas: a tool for visualising evidence synthesis databases #> 2         revtools: An R package to support article screening for evidence synthesis #> 3           An automated approach to identifying search terms for systematic reviews #> 4 Reproducible, flexible and high-throughput data extraction from primary literature #>   year      authors #> 1 2019         <NA> #> 2 2019         <NA> #> 3 <NA> Grames et al #> 4 <NA>   Pick et al"},{"path":"https://martinwestgate.com/synthesisr/dev/reference/override_duplicates.html","id":null,"dir":"Reference","previous_headings":"","what":"Manually override duplicates — override_duplicates","title":"Manually override duplicates — override_duplicates","text":"Re-assign group numbers text classified duplicated unique.","code":""},{"path":"https://martinwestgate.com/synthesisr/dev/reference/override_duplicates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Manually override duplicates — override_duplicates","text":"","code":"override_duplicates(matches, overrides)"},{"path":"https://martinwestgate.com/synthesisr/dev/reference/override_duplicates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Manually override duplicates — override_duplicates","text":"matches Numeric: vector group numbers texts indicates duplicates unique values returned find_duplicates function. overrides Numeric: vector group numbers true duplicates.","code":""},{"path":"https://martinwestgate.com/synthesisr/dev/reference/override_duplicates.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Manually override duplicates — override_duplicates","text":"input matches vector unique group numbers members groups user overrides.","code":""},{"path":"https://martinwestgate.com/synthesisr/dev/reference/parse_.html","id":null,"dir":"Reference","previous_headings":"","what":"Parse bibliographic text in a variety of formats — parse_bibtex","title":"Parse bibliographic text in a variety of formats — parse_bibtex","text":"Text standard formats - imported via base::readLines() - can parsed using variety standard formats. Use detect_parser() determine appropriate parser situation. Note parse_tsv() parse_csv() maintained backwards compatability ; within read_ref replaced vroom::vroom().","code":""},{"path":"https://martinwestgate.com/synthesisr/dev/reference/parse_.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parse bibliographic text in a variety of formats — parse_bibtex","text":"","code":"parse_bibtex(x)  parse_csv(x)  parse_tsv(x)  parse_pubmed(x)  parse_ris(x, tag_naming = \"best_guess\")"},{"path":"https://martinwestgate.com/synthesisr/dev/reference/parse_.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parse bibliographic text in a variety of formats — parse_bibtex","text":"x character vector containing bibliographic information ris format. tag_naming format ris tags ? Defaults \"best_guess\" See read_refs() list accepted arguments.","code":""},{"path":"https://martinwestgate.com/synthesisr/dev/reference/parse_.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parse bibliographic text in a variety of formats — parse_bibtex","text":"Returns object class bibliography (ris, bib, pubmed formats) data.frame (csv tsv).","code":""},{"path":"https://martinwestgate.com/synthesisr/dev/reference/parse_.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Parse bibliographic text in a variety of formats — parse_bibtex","text":"","code":"eviatlas <- c(   \"TY  - JOUR\",   \"AU  - Haddaway, Neal R.\",   \"AU  - Feierman, Andrew\",   \"AU  - Grainger, Matthew J.\",   \"AU  - Gray, Charles T.\",   \"AU  - Tanriver-Ayder, Ezgi\",   \"AU  - Dhaubanjar, Sanita\",   \"AU  - Westgate, Martin J.\",   \"PY  - 2019\",   \"DA  - 2019/06/04\",   \"TI  - EviAtlas: a tool for visualising evidence synthesis databases\",   \"JO  - Environmental Evidence\",   \"SP  - 22\",   \"VL  - 8\",   \"IS  - 1\",   \"SN  - 2047-2382\",   \"UR  - https://doi.org/10.1186/s13750-019-0167-1\",   \"DO  - 10.1186/s13750-019-0167-1\",   \"ID  - Haddaway2019\",   \"ER  - \" )  detect_parser(eviatlas) # = \"parse_ris\" #> [1] \"parse_ris\" df <- as.data.frame(parse_ris(eviatlas)) ris_out <- write_refs(df, format = \"ris\", file = FALSE) #> Error in check_filename(file): argument 'file' should be an object of class `character`"},{"path":"https://martinwestgate.com/synthesisr/dev/reference/read_refs.html","id":null,"dir":"Reference","previous_headings":"","what":"Import bibliographic search results — read_refs","title":"Import bibliographic search results — read_refs","text":"Imports common bibliographic reference formats (.e. .bib, .ris, .txt).","code":""},{"path":"https://martinwestgate.com/synthesisr/dev/reference/read_refs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Import bibliographic search results — read_refs","text":"","code":"read_refs(   filename,   tag_naming = \"best_guess\",   return_df = TRUE,   verbose = FALSE,   locale = default_locale() )"},{"path":"https://martinwestgate.com/synthesisr/dev/reference/read_refs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Import bibliographic search results — read_refs","text":"filename path filename vector filenames containing search results import. tag_naming Either length-1 character stating ris tags replaced (see details list options), object inheriting class data.frame containing user-defined replacement tags. return_df TRUE (default), returns data.frame; FALSE, returns list. verbose TRUE, prints status updates (defaults FALSE).","code":""},{"path":"https://martinwestgate.com/synthesisr/dev/reference/read_refs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Import bibliographic search results — read_refs","text":"Returns data.frame list assembled search results.","code":""},{"path":"https://martinwestgate.com/synthesisr/dev/reference/read_refs.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Import bibliographic search results — read_refs","text":"default argument tag_naming \"best_guess\", estimates database used ris tag replacement, fills gaps generic tags. tags missing database (.e. code_lookup) passed unchanged. options use tags Web Science (\"wos\"), Scopus (\"scopus\"), Ovid (\"ovid\") Academic Search Premier (\"asp\"). data.frame given, must contain two columns: \"code\" listing original tags source document, \"field\" listing replacement column/tag names. data.frame may optionally include third column named \"order\", specifies order columns resulting data.frame; otherwise taken row order. Finally, passing \"none\" replace_tags suppresses tag replacement.","code":""},{"path":"https://martinwestgate.com/synthesisr/dev/reference/read_refs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Import bibliographic search results — read_refs","text":"","code":"litsearchr <- c(   \"@article{grames2019,   title={An automated approach to identifying search terms for   systematic reviews using keyword co-occurrence networks},   author={Grames, Eliza M and Stillman, Andrew N and Tingley, Morgan W and Elphick, Chris S},   journal={Methods in Ecology and Evolution},   volume={10},   number={10},   pages={1645--1654},   year={2019},   publisher={Wiley Online Library} }\" )  tmp <- tempfile()  writeLines(litsearchr, tmp)  df <- read_refs(tmp, return_df = TRUE, verbose = TRUE) #> Reading file /tmp/Rtmp7Zu2Kl/file1d59498cf85a ... done"},{"path":"https://martinwestgate.com/synthesisr/dev/reference/reexports.html","id":null,"dir":"Reference","previous_headings":"","what":"Objects exported from other packages — reexports","title":"Objects exported from other packages — reexports","text":"objects imported packages. Follow links see documentation. tibble as_tibble","code":""},{"path":"https://martinwestgate.com/synthesisr/dev/reference/review_duplicates.html","id":null,"dir":"Reference","previous_headings":"","what":"Manually review potential duplicates — review_duplicates","title":"Manually review potential duplicates — review_duplicates","text":"Allows users manually review articles classified duplicates.","code":""},{"path":"https://martinwestgate.com/synthesisr/dev/reference/review_duplicates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Manually review potential duplicates — review_duplicates","text":"","code":"review_duplicates(text, matches)"},{"path":"https://martinwestgate.com/synthesisr/dev/reference/review_duplicates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Manually review potential duplicates — review_duplicates","text":"text character vector text used identify potential duplicates. matches Numeric: vector group numbers texts indicates duplicates unique values returned find_duplicates function.","code":""},{"path":"https://martinwestgate.com/synthesisr/dev/reference/review_duplicates.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Manually review potential duplicates — review_duplicates","text":"data.frame potential duplicates grouped together.","code":""},{"path":"https://martinwestgate.com/synthesisr/dev/reference/string_.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate similarity between two strings — string_","title":"Calculate similarity between two strings — string_","text":"functions access specific \"methods\" argument provided stringdist, provided convenient calling find_duplicates(). include new functionality beyond given stringdist, use analyses.","code":""},{"path":"https://martinwestgate.com/synthesisr/dev/reference/string_.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate similarity between two strings — string_","text":"","code":"string_osa(a, b)  string_lv(a, b)  string_dl(a, b)  string_hamming(a, b)  string_lcs(a, b)  string_qgram(a, b)  string_cosine(a, b)  string_jaccard(a, b)  string_jw(a, b)  string_soundex(a, b)"},{"path":"https://martinwestgate.com/synthesisr/dev/reference/string_.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate similarity between two strings — string_","text":"character vector items match b. b character vector items match .","code":""},{"path":"https://martinwestgate.com/synthesisr/dev/reference/string_.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate similarity between two strings — string_","text":"Returns score length b, giving dissimilarity b.","code":""},{"path":"https://martinwestgate.com/synthesisr/dev/reference/synthesisr-package.html","id":null,"dir":"Reference","previous_headings":"","what":"synthesisr: Import, assemble, and deduplicate bibiliographic datasets — synthesisr-package","title":"synthesisr: Import, assemble, and deduplicate bibiliographic datasets — synthesisr-package","text":"Systematic review searches include multiple databases export results variety formats overlap coverage databases. streamline process importing, assembling, deduplicating results, synthesisr recognizes bibliographic files exported databases commonly used systematic reviews merges results standardized format.","code":""},{"path":"https://martinwestgate.com/synthesisr/dev/reference/synthesisr-package.html","id":"import-amp-export","dir":"Reference","previous_headings":"","what":"Import & Export","title":"synthesisr: Import, assemble, and deduplicate bibiliographic datasets — synthesisr-package","text":"key task performed synthesisr flexible import presentation bibliographic data. typically achieved read_refs(), can import multiple files link together single data.frame. Conversely, export via write_refs(). Users require detailed control can use following functions: read_refs Read bibliographic data write_refs Write bibliographic data detect_ Detect file attributes parse_ Parse vector containing bibliographic data clean_ Cleaning functions author column names code_lookup dataset potential ris tags","code":""},{"path":"https://martinwestgate.com/synthesisr/dev/reference/synthesisr-package.html","id":"formatting","dir":"Reference","previous_headings":"","what":"Formatting","title":"synthesisr: Import, assemble, and deduplicate bibiliographic datasets — synthesisr-package","text":"bibliography Methods class bibliography format_citation Return clean citation bibliography data.frame add_line_breaks Set maximum character width strings","code":""},{"path":"https://martinwestgate.com/synthesisr/dev/reference/synthesisr-package.html","id":"deduplication","dir":"Reference","previous_headings":"","what":"Deduplication","title":"synthesisr: Import, assemble, and deduplicate bibiliographic datasets — synthesisr-package","text":"importing multiple databases, likely duplicates resulting dataset. easiest way deal problem synthesisr using deduplicate() function; can risky, particularly DOIs dataset. get finer control deduplication process, consider using sub-functions: deduplicate Semi-automated duplicate removal find_duplicates Locate potentially duplicated references extract_unique_references Return data.frame 'unique' references review_duplicates Manually review potential duplicates override_duplicates Manually override identified duplicates fuzz_ Fuzzy string matching c/o fuzzywuzzy string_ Fuzzy string matching c/o stringdist","code":""},{"path":"https://martinwestgate.com/synthesisr/dev/reference/synthesisr-package.html","id":"deprecated","dir":"Reference","previous_headings":"","what":"Deprecated","title":"synthesisr: Import, assemble, and deduplicate bibiliographic datasets — synthesisr-package","text":"merge_columns Synonymous dplyr::bind_rows","code":""},{"path":[]},{"path":"https://martinwestgate.com/synthesisr/dev/reference/synthesisr-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"synthesisr: Import, assemble, and deduplicate bibiliographic datasets — synthesisr-package","text":"Maintainer: Martin Westgate martinjwestgate@gmail.com (ORCID) Authors: Eliza Grames eliza.grames@uconn.edu (ORCID)","code":""},{"path":"https://martinwestgate.com/synthesisr/dev/reference/write_refs.html","id":null,"dir":"Reference","previous_headings":"","what":"Export data to a bibliographic format — write_refs","title":"Export data to a bibliographic format — write_refs","text":"function exports data.frames containing bibliographic information either .ris .bib file.","code":""},{"path":"https://martinwestgate.com/synthesisr/dev/reference/write_refs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Export data to a bibliographic format — write_refs","text":"","code":"write_refs(x, file, format = \"ris\", tag_naming = \"synthesisr\", write = TRUE)  write_bib(x)  write_ris(x, tag_naming = \"synthesisr\")"},{"path":"https://martinwestgate.com/synthesisr/dev/reference/write_refs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Export data to a bibliographic format — write_refs","text":"x Either data.frame containing bibliographic information object class bibliography. file filename save . format format data exported ? Options ris bib. tag_naming naming convention used write RIS files? See details options. write Logical file written? FALSE returns list.","code":""},{"path":"https://martinwestgate.com/synthesisr/dev/reference/write_refs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Export data to a bibliographic format — write_refs","text":"function typically called side effect writing file specified location format. write FALSE, returns character vector containing bibliographic information specified format.","code":""},{"path":"https://martinwestgate.com/synthesisr/dev/reference/write_refs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Export data to a bibliographic format — write_refs","text":"","code":"eviatlas <- c(   \"TY  - JOUR\",   \"AU  - Haddaway, Neal R.\",   \"AU  - Feierman, Andrew\",   \"AU  - Grainger, Matthew J.\",   \"AU  - Gray, Charles T.\",   \"AU  - Tanriver-Ayder, Ezgi\",   \"AU  - Dhaubanjar, Sanita\",   \"AU  - Westgate, Martin J.\",   \"PY  - 2019\",   \"DA  - 2019/06/04\",   \"TI  - EviAtlas: a tool for visualising evidence synthesis databases\",   \"JO  - Environmental Evidence\",   \"SP  - 22\",   \"VL  - 8\",   \"IS  - 1\",   \"SN  - 2047-2382\",   \"UR  - https://doi.org/10.1186/s13750-019-0167-1\",   \"DO  - 10.1186/s13750-019-0167-1\",   \"ID  - Haddaway2019\",   \"ER  - \" )  detect_parser(eviatlas) # = \"parse_ris\" #> [1] \"parse_ris\" df <- as.data.frame(parse_ris(eviatlas)) ris_out <- write_refs(df, format = \"ris\", file = FALSE) #> Error in check_filename(file): argument 'file' should be an object of class `character`"},{"path":"https://martinwestgate.com/synthesisr/dev/news/index.html","id":"synthesisr-030","dir":"Changelog","previous_headings":"","what":"synthesisr 0.3.0","title":"synthesisr 0.3.0","text":"CRAN release: 2020-06-03 minor rebuild meet modern data standards - mainly supporting tibbles rather data.frames default","code":""}]
